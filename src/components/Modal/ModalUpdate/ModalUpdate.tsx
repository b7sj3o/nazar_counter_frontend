import { useEffect, useState } from "react";
import "./ModalUpdate.scss";

export const UPDATES = [
    {
        version: "1.0",
        changes: ["üîπ –ë–∞–∑–æ–≤–∏–π —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª"]
    },
    {
        version: "1.1",
        changes: [
            "üîπ –î–æ–¥–∞–Ω–æ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –∑–º—ñ–Ω–∏ –¥–∞–Ω–∏—Ö –ª—ñ–Ω—ñ–π–∫–∏ —Ç–æ–≤–∞—Ä—ñ–≤ (—Ü—ñ–Ω–∞)",
            "üîπ –î–æ–±–∞–≤–ª–µ–Ω–æ –∫–Ω–æ–ø–∫—É '–ü—Ä–æ–¥–∞–∂ –¥—Ä–æ–ø'",
            "üîπ –î–æ–±–∞–≤–ª–µ–Ω–æ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –≤–µ—Ä—Å—ñ—é"
        ]
    },
]

const ModalUpdate = () => {
    const [isOpen, setIsOpen] = useState(false);
    const [latestUpdate, setLatestUpdate] = useState<{ version: string; changes: string[] } | null>(null);

    useEffect(() => {
        const seenUpdates = JSON.parse(localStorage.getItem("seen_updates") || "[]");
        const newUpdate = UPDATES.find((update) => !seenUpdates.includes(update.version));

        if (newUpdate) {
            setLatestUpdate(newUpdate);
            setIsOpen(true);
            localStorage.setItem("seen_updates", JSON.stringify([...seenUpdates, newUpdate.version]));
        }
    }, []);

    return isOpen && latestUpdate ? (
        <div className="modal-update__overlay">
            <div className="modal-update__modal">
                <h2>üöÄ –û–Ω–æ–≤–ª–µ–Ω–Ω—è {latestUpdate.version}!</h2>
                <div className="updates">
                    {latestUpdate.changes.map((change, index) => (
                        <p key={index}>{change}</p>
                    ))}
                </div>
                <button onClick={() => setIsOpen(false)} className="modal-update__button">
                    –û–∫–µ–π, –∑—Ä–æ–∑—É–º—ñ–ª–æ!
                </button>
            </div>
        </div>
    ) : null;
};

export default ModalUpdate;
